{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>My name is Julia Smith. As a member of STEMteresting (Team 301), my role involves designing and integrating the sensor subsystem. This includes selecting an appropriate distance sensor, ensuring compatibility with the PIC18F47Q10, and configuring I\u00b2C communication. Additionally, I will assist with the microcontroller's programming, actuation, and communication subsystems. </p> <p>Email: jasmi157@asu.edu </p> Assignments <ul> <li>Block Diagram</li> <li>Component Selection</li> <li>MCC Configuration</li> <li>Power Budget</li> <li>Schematic</li> <li>Bill of Materials</li> <li>API</li> </ul> Team Webpage <ul> <li>Team Page</li> </ul>"},{"location":"api/","title":"API","text":"<p>The tables below describe the messages sent from the distance sensor subsystem (Julia) using <code>uint8_t</code> binary flags (0 = False, 1 = True). All messages are formatted using the class UART protocol and occupy the data field (bytes 5\u201361) of the 64-byte message frame.</p> \ud83d\udfe5 Safety Response Message (to Motor) <p>\ud83d\udea8 This message tells the motor subsystem whether the user is currently in a safe position.</p> Field Value \ud83d\udce6 Byte 1 <code>User_Safe_Flag</code> \ud83d\udcd0 Variable Type <code>uint8_t</code> \ud83d\udd3b Min Value <code>0</code> (User Not Safe) \ud83d\udd3a Max Value <code>1</code> (User Safe) \ud83d\udd22 Example <code>1</code> \ud83d\udca1 Use Tells the motor whether to activate based on user position \ud83d\udfe7 OLED Display Message (to OLED) <p>\ud83d\udda5\ufe0f This message instructs the OLED display what message to show based on user status.</p> Field Value \ud83d\udce6 Byte 1 <code>OLED_Display_Flag</code> \ud83d\udcd0 Variable Type <code>uint8_t</code> \ud83d\udd3b Min Value <code>0</code> (Display 'Stand on X') \ud83d\udd3a Max Value <code>1</code> (Display 'Initializing') \ud83d\udd22 Example <code>1</code> \ud83d\udca1 Use Tells the OLED whether to show initialization or waiting instructions \ud83d\udfe8 Machine Use Status Message (to WiFi) <p>\ud83d\udcf6 This message tells the WiFi module whether the machine is currently in use.</p> Field Value \ud83d\udce6 Byte 1 <code>Machine_Use_Status</code> \ud83d\udcd0 Variable Type <code>uint8_t</code> \ud83d\udd3b Min Value <code>0</code> (Idle) \ud83d\udd3a Max Value <code>1</code> (In Use) \ud83d\udd22 Example <code>1</code> \ud83d\udca1 Use Tells the WiFi module whether the machine is active \ud83d\udd27 Distance Sensor Subsystem \u2013 MPLAB Project Overview  <p>This MPLAB X project implements the firmware for the distance sensor subsystem in our team\u2019s UART-based communication network. It continuously reads simulated distance data and broadcasts key system state messages to other subsystems (Motor, OLED, and WiFi) using a standardized UART protocol.</p> <p>\ud83c\udf08\ud83d\udcc1\u2728 Files</p> <ul> <li> \ud83d\udcc1 MPLABS Zip File </li> </ul> <p>\ud83d\udce6 Key Features</p> <ul> <li> <p>UART Messaging Protocol    Each message follows the class-defined structure:   [Prefix1] [Prefix2] [Sender] [Receiver] [Message Type] [Data...] [Suffix1] [Suffix2]   All messages are 64 bytes in length and framed for reliability.</p> </li> <li> <p>Subsystem Communication   This subsystem transmits:</p> </li> <li>User distance data (MSG_DISTANCE_DATA) \u2013 broadcast to all</li> <li>Safety flag (MSG_SAFETY_RESPONSE) \u2013 sent to Motor subsystem</li> <li>Display flag (MSG_OLED_FLAG) \u2013 sent to OLED subsystem</li> <li> <p>Machine use status (MSG_MACHINE_STATUS) \u2013 sent to WiFi module</p> </li> <li> <p>Timeout Handling &amp; Message Trashing   Messages from the subsystem itself or malformed data are discarded using timer interrupts.</p> </li> <li> <p>Message Forwarding   The subsystem forwards any UART messages not addressed to itself to maintain the daisy-chain topology.</p> </li> <li> <p>Code Structure   The main logic resides in main.c with UART handling and timed messaging built using MCC-generated peripheral drivers (EUSART1, Timer1).</p> </li> </ul>"},{"location":"api/#_1","title":"\ud83c\udf08\ud83d\udd17\u2728 Links","text":"<ul> <li> \ud83c\udfe0 Home </li> <li> \ud83d\udc65 Team Page </li> </ul>"},{"location":"billofmaterials/","title":"Bill of Materials","text":""},{"location":"billofmaterials/#overview","title":"Overview","text":"<p>This document outlines the components used in the I2C Distance Sensor Subsystem project, including their part numbers, descriptions, and Digi-Key links.</p>"},{"location":"billofmaterials/#bill-of-materials_1","title":"Bill of MaterialsAdditional Links","text":"<ul> <li>Bill of Materials Spreadsheet</li> <li>Bill of Materials PDF</li> <li>Home</li> <li>Team Page</li> </ul>"},{"location":"blockdiagram/","title":"Block Diagram","text":""},{"location":"blockdiagram/#block-diagram-of-subsystem-distance-sensor","title":"Block Diagram of Subsystem: Distance SensorAdditional Links","text":"<p>This is the block diagram for our distance sensor subsystem. The sensor will wait for user input from the external OLED subsytem by Xander Heafey. Once the user input is received, the distance sensor will be in the \"on\" state. Distastance data will be collected and transmitted to the external Motor Driver Subsystem by Sara Bohart to initiate motor rotations at speeds which correlate with the collected distance data.  </p> <p></p> <ul> <li>Block Diagram PDF</li> <li>Home</li> <li>Team Page</li> </ul>"},{"location":"charts/","title":"Charts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"componentselection/","title":"Component Selection","text":""},{"location":"componentselection/#objective","title":"Objective","text":"<p>The purpose of this page is to compare, and contrast multiple solutions for each major component in my subsystem design. This includes identifying off-the-shelf and custom electrical or mechanical components, assessing compatibility with project specifications, and articulating rationale for final choices.</p>"},{"location":"componentselection/#electrical-block-diagram","title":"Electrical Block Diagram","text":"<p>This diagram outlines the key components and subsystems: microcontroller, distance sensor (via I\u00b2C), motor driver, and actuators. Each subsystem requires separate research and component selection.</p>"},{"location":"componentselection/#major-component-selections","title":"Major Component Selections","text":""},{"location":"componentselection/#microcontroller-pic18f47q10-ipt","title":"Microcontroller: PIC18F47Q10-I/PT","text":"<p> Cost: $1.49  Operating Voltage: 1.8V - 5.5V  Datasheet </p> Pros Cons Compatible with MPLab Snap Programmer Requires MCC configuration for all peripherals Supports multiple communication protocols (UART, I\u00b2C) Higher complexity than simpler microcontrollers Extensively documented with sample code Surface-mount version may be difficult to solder Integrated ADC, PWM, and GPIO Slightly higher cost than lower-performance alternatives"},{"location":"componentselection/#mplab-snap-programmer-pg160100","title":"MPLab Snap Programmer: PG160100","text":"<p> Cost: $14.99  Operating Voltage: 1.20V - 5.5V Datasheet </p> Pros Cons Affordable and official Microchip support May require firmware updates Compatible with multiple PIC microcontrollers Limited debugging features Easy to integrate with MPLab X IDE Not as durable as other higher-end programmers"},{"location":"componentselection/#voltage-regulators","title":"Voltage Regulators","text":""},{"location":"componentselection/#option-1-lm2574mx-33nopb-chosen","title":"Option 1: LM2574MX-3.3/NOPB (Chosen)","text":"<p> Datasheet Max Current: 0.5A Efficiency: ~72% at 12V input Operating Voltage: 4.75V \u2013 40V Switching Frequency: 52kHz  </p> Pros Cons Compact and simple step-down (buck) regulator Lower current capacity (0.5A max) Fixed 3.3V output \u2013 no external resistors needed Requires external inductor &amp; diode Wide input voltage range (4.75V - 40V) Less efficient than higher-frequency buck converters Thermal shutdown &amp; current limiting protection Lower efficiency (~72%) compared to newer switchers Minimal external components required Limited to applications with low current needs"},{"location":"componentselection/#option-2-ams1117-33v-alternative","title":"Option 2: AMS1117-3.3V (Alternative)","text":"<p> Datasheet Max Current: 800mA Efficiency: Linear, ~50-60% Operating Voltage: 4.5V \u2013 15V </p> Pros Cons Small &amp; simple to use (3-pin LDO) Lower efficiency compared to switching regulators Minimal external components required Dissipates more heat (wasted as power loss) Cost-effective &amp; widely available Max 800mA, less than LM2575 Ideal for low-noise applications Requires good heat dissipation if near max load"},{"location":"componentselection/#option-3-mp2315-step-down-regulator-alternative","title":"Option 3: MP2315 Step-Down Regulator (Alternative)","text":"<p> Datasheet Max Current: 2.5A Efficiency: Up to 90% Operating Voltage: 4.5V \u2013 24V </p> Pros Cons High efficiency (~90%) saves power Requires external inductor &amp; capacitors Compact size (SMT, small footprint) Slightly more complex than AMS1117 Supports up to 2.5A (ideal for high-power loads) Higher cost than AMS1117 Adjustable output voltage available More difficult to solder for beginners"},{"location":"componentselection/#distance-sensor-options","title":"Distance Sensor Options","text":""},{"location":"componentselection/#option-1-vl53l1cxv0fy1","title":"Option 1: VL53L1CXV0FY/1","text":"<p> Datasheet Product Link Cost: $5.77 Max Range: 4 Meters Operating Voltage: 2.6V - 3.5V FOV: 27\u00b0  Communication: I\u00b2C Mount: Surface  </p> Pros Cons Extended range up to 4 meters Surface-mount LGA-16 package may require reflow soldering I\u00b2C communication simplifies integration with MCUs Requires precise alignment for accurate measurements Supports variable timing budgets for power efficiency More expensive than VL53L0X Multi-target detection with programmable distance modes Sensitive to ambient lighting conditions in some environments"},{"location":"componentselection/#option-2-vl53l0x","title":"Option 2: VL53L0X","text":"<p> Datasheet Product Link Cost: $2.64 Max Range: 2 Meters Operating Voltage: 2.8V - 3.3V FOV: 25\u00b0  Communication: I\u00b2C Mount: Surface  </p> Pros Cons Compact and low-cost sensor for short-range sensing Limited range (up to 1.2 meters) Higher FOV of 25\u00b0 LGA package can be difficult to solder manually Low power consumption ideal for portable devices Sensitive to ambient lighting interference"},{"location":"componentselection/#option-3-tmf8801-time-of-flight-distance-sensor","title":"Option 3: TMF8801 Time-of-Flight Distance Sensor","text":"<p> Datasheet Product Link Cost: $3.57 Max Range: 2.5 Meters Operating Voltage: 2.7V \u2013 3.6V Communication: I\u00b2C Mount: Surface-Mount (OLGA-12 Package) Field of View: 3\u00b0  </p> Pros Cons Compact surface-mount package suitable for space-constrained designs Low FOV of 3\u00b0 Operates at 3.3V, compatible with low-voltage MCUs Limited to 2.5 meters maximum range Low power consumption, ideal for battery-powered applications Very small, may be difficult to mount manually High accuracy with minimal ambient light sensitivity May require external components for optimal operation"},{"location":"componentselection/#final-component-selections","title":"Final Component Selections","text":"<p>After evaluating range, cost, and ease of integration, the VL53L1CXV0FY/1 sensor was selected due to its extended range capabilities, multi-target detection, and FOV of 27\u00b0, making it the best fit for our users.</p> <p>For voltage regulation, the LM2574MX-3.3/NOPB was chosen as the final voltage regulator. It provides moderate efficiency (~72%), supports up to 0.5A output current, and includes built-in protections such as thermal shutdown and current limiting. Its switching regulator design reduces power dissipation compared to linear regulators, making it a reliable choice for low-power applications within the system.</p>"},{"location":"componentselection/#power-budget","title":"Power BudgetAdditional Links","text":"<ul> <li>Power Budget Spreadsheet</li> <li>Power Budget PDF</li> <li>Home</li> <li>Team Page</li> </ul>"},{"location":"mccconfiguration/","title":"MCC Configuration","text":""},{"location":"mccconfiguration/#overview","title":"Overview","text":"<p>This section details the MPLAB Code Configurator (MCC) setup for the subsystem, including I\u00b2C communication, GPIO pin assignments, and peripheral configurations.  </p> <p>It outlines how the PIC18F47Q10 microcontroller is set as the I\u00b2C Master to communicate with the distance sensors and how debugging LEDs are configured as digital outputs.  </p>"},{"location":"mccconfiguration/#mcc-configuration_1","title":"MCC Configuration","text":""},{"location":"mccconfiguration/#pin-assignments","title":"Pin Assignments","text":""},{"location":"mccconfiguration/#application-builder","title":"Application Builder","text":""},{"location":"mccconfiguration/#full-screen-view","title":"Full Screen View","text":"Additional Links <ul> <li>MPLabs Zip File</li> <li>Home</li> <li>Team Page</li> </ul>"},{"location":"powerbudget/","title":"Power Budget","text":""},{"location":"powerbudget/#overview","title":"Overview","text":"<p>The power budget page outlines the estimated power consumption for each component  in my subsystem for this project, ensuring that my power supply can reliably support the system. </p> <p>It details the voltage and current requirements for the microcontroller, sensors,  voltage regulator, and debugging LEDs. </p> <p>This analysis helps optimize battery life, prevent overloading, and ensure stable  operation under all conditions.</p>"},{"location":"powerbudget/#power-budget_1","title":"Power BudgetAdditional Links","text":"<ul> <li>Power Budget Spreadsheet</li> <li>Power Budget PDF</li> <li>Home</li> <li>Team Page</li> </ul>"},{"location":"schematic/","title":"Schematic","text":""},{"location":"schematic/#overview","title":"Overview","text":"<p>The schematic illustrates the electrical connections and components of my subsystem,  including the microcontroller, sensors, voltage regulator, and and debugging components. </p> <p>It defines how signals and power are distributed, ensuring proper operation and  integration of all hardware. </p>"},{"location":"schematic/#schematic_1","title":"SchematicAdditional Links","text":"<ul> <li>Altium Project Zip File</li> <li>Schematic PDF</li> <li>Home</li> <li>Team Page</li> </ul>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"Index","text":"<p>title: Welcome tags: - tag1 - tag2</p>"},{"location":"subfolder/#hello-my-name-is-julia-smith","title":"Hello, my name is Julia Smith","text":"<ul> <li>List item 1</li> <li>List item 2</li> </ul> <p>name | description as above | 000 so below | 111</p>"},{"location":"subfolder/#here-is-a-sub-heading","title":"Here is a sub heading","text":"<ol> <li>step 1 </li> <li>step 2</li> </ol> <p>Things to discuss</p>"}]}